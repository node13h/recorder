; -*- mode: clojure; -*-
; vim: filetype=clojure

(def influxdb-creds {
     :version :0.9
     :host "influxdb"
     :port 8086
     :db "riemann"
     ; :username "riemann"
     ; :password "riemann_password"
})

(def influxdb-batch-sender
  (batch 100 1/10
         (async-queue! :agg {:queue-size 1000
                             :core-pool-size 1
                             :max-pool-size 4
                             :keep-alive-time 60000}
                       (influxdb influxdb-creds))))

(logging/init {:file "riemann.log"})

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "0.0.0.0"]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host}))

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    (default :ttl 60
      ; Index all events immediately.
      index

      (where (and (not (state "expired")) (not (metric nil)))
             (tagged-all "collectd"
                         (by [:host :service]
                             (throttle 1 60
                                       prn
                                       influxdb-batch-sender))))

      ; Log expired events.
      (expired
        (fn [event] (info "expired" event))))))

